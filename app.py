# -*- coding: utf-8 -*-
"""Untitled58.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jli-g5F8btzut-l2QJRwI7I6qOzGcYTM
"""

!pip install openai streamlit pandas

# Import necessary libraries
import openai
import pandas as pd
import streamlit as st

# Load your error codes and troubleshooting data
def load_data():
    data = pd.DataFrame({
        'Error Code': ['E0', 'E1', 'E2'],
        'Issue': ['Communication failure', 'Room temperature sensor failure', 'Coil temperature sensor failure'],
        'Solution': ['Check wiring connections', 'Replace the sensor', 'Replace or reconnect sensor']
    })
    return data

# Function to troubleshoot based on error code
def troubleshoot(error_code, data):
    row = data[data['Error Code'] == error_code]
    if not row.empty:
        return f"Issue: {row['Issue'].values[0]}\nSolution: {row['Solution'].values[0]}"
    else:
        return "Error code not found. Please check the TCL support website for more information."

# Streamlit app function
def main():
    st.title("TCL Appliance Troubleshooter")
    st.write("Welcome to the TCL Troubleshooter! Enter the error code displayed on your appliance to get started.")

    # Load troubleshooting data
    data = load_data()

    # User input for error code
    error_code = st.text_input("Enter the error code displayed on your appliance:")

    if error_code:
        solution = troubleshoot(error_code.upper(), data)
        st.text_area("Troubleshooting Solution", solution, height=200)

        # Ask if the issue is resolved
        resolved = st.radio("Did this solution resolve your issue?", ("Yes", "No"))

        if resolved == "No":
            st.write("Let's try some additional steps to resolve the issue.")

            # Example troubleshooting questions
            st.write("1. Have you checked the wiring connections?")
            st.write("2. Did you inspect and clean the sensors?")
            st.write("3. Have you ensured that the power supply is functioning correctly?")

            tried_all = st.radio("Have you tried all the steps above?", ("Yes", "No"))

            if tried_all == "Yes":
                live_agent = st.radio("Would you like to connect with a live agent for further assistance?", ("Yes", "No"))

                if live_agent == "Yes":
                    st.write("Please contact TCL support at [TCL Support](https://support.tcl.com/us).")

                # Push a survey
                st.write("We'd appreciate your feedback on this troubleshooting session:")
                survey_q1 = st.radio("1. How would you rate the clarity of the instructions?", ("Excellent", "Good", "Fair", "Poor"))
                survey_q2 = st.radio("2. Did you find the solution helpful?", ("Yes", "No"))
                survey_q3 = st.text_input("3. Any additional comments or suggestions?")

                st.write("Thank you for your feedback!")

if __name__ == "__main__":
    main()